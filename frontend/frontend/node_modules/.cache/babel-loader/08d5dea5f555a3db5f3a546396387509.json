{"ast":null,"code":"import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return function (event, info) {\n    var _a;\n\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    callback === null || callback === void 0 ? void 0 : callback(event, info);\n  };\n}\n\nfunction useHoverGesture(_a) {\n  var onHoverStart = _a.onHoverStart,\n      onHoverEnd = _a.onHoverEnd,\n      whileHover = _a.whileHover,\n      visualElement = _a.visualElement;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined);\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined);\n}\n\nexport { useHoverGesture };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs"],"names":["isMouseEvent","AnimationType","usePointerEvent","isDragActive","createHoverEvent","visualElement","isActive","callback","event","info","_a","animationState","setActive","Hover","useHoverGesture","onHoverStart","onHoverEnd","whileHover","undefined"],"mappings":"AAAA,SAASA,YAAT,QAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,aAA1B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;AACzD,SAAO,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AAC1B,QAAIC,EAAJ;;AACA,QAAI,CAACV,YAAY,CAACQ,KAAD,CAAb,IAAwBL,YAAY,EAAxC,EACI;AACJ;AACR;AACA;;AACQ,KAACO,EAAE,GAAGL,aAAa,CAACM,cAApB,MAAwC,IAAxC,IAAgDD,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACE,SAAH,CAAaX,aAAa,CAACY,KAA3B,EAAkCP,QAAlC,CAAzE;AACAC,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACC,KAAD,EAAQC,IAAR,CAA5D;AACH,GATD;AAUH;;AACD,SAASK,eAAT,CAAyBJ,EAAzB,EAA6B;AACzB,MAAIK,YAAY,GAAGL,EAAE,CAACK,YAAtB;AAAA,MAAoCC,UAAU,GAAGN,EAAE,CAACM,UAApD;AAAA,MAAgEC,UAAU,GAAGP,EAAE,CAACO,UAAhF;AAAA,MAA4FZ,aAAa,GAAGK,EAAE,CAACL,aAA/G;AACAH,EAAAA,eAAe,CAACG,aAAD,EAAgB,cAAhB,EAAgCU,YAAY,IAAIE,UAAhB,GACzCb,gBAAgB,CAACC,aAAD,EAAgB,IAAhB,EAAsBU,YAAtB,CADyB,GAEzCG,SAFS,CAAf;AAGAhB,EAAAA,eAAe,CAACG,aAAD,EAAgB,cAAhB,EAAgCW,UAAU,IAAIC,UAAd,GACzCb,gBAAgB,CAACC,aAAD,EAAgB,KAAhB,EAAuBW,UAAvB,CADyB,GAEzCE,SAFS,CAAf;AAGH;;AAED,SAASJ,eAAT","sourcesContent":["import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\nexport { useHoverGesture };\n"]},"metadata":{},"sourceType":"module"}