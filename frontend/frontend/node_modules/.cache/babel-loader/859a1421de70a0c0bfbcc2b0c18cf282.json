{"ast":null,"code":"import { __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, options, props) {\n    buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n  },\n  render: renderSVG\n}));\nexport { svgVisualElement };","map":{"version":3,"sources":["/Users/aditummala/Desktop/group13-1/frontend/frontend/node_modules/framer-motion/dist/es/render/svg/visual-element.mjs"],"names":["__assign","visualElement","scrapeMotionValuesFromProps","htmlConfig","buildSVGAttrs","camelToDash","camelCaseAttributes","isTransformProp","renderSVG","getDefaultValueType","svgVisualElement","getBaseTarget","props","key","readValueFromInstance","domElement","_a","default","has","getAttribute","build","_element","renderState","latestValues","options","transformTemplate","render"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,2BAAT,QAA4C,kCAA5C;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,IAAIC,gBAAgB,GAAGT,aAAa,CAACD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKG,UAAL,CAAT,EAA2B;AAAEQ,EAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACvG,WAAOD,KAAK,CAACC,GAAD,CAAZ;AACH,GAFmE;AAEjEC,EAAAA,qBAAqB,EAAE,UAAUC,UAAV,EAAsBF,GAAtB,EAA2B;AACjD,QAAIG,EAAJ;;AACA,QAAIT,eAAe,CAACM,GAAD,CAAnB,EAA0B;AACtB,aAAO,CAAC,CAACG,EAAE,GAAGP,mBAAmB,CAACI,GAAD,CAAzB,MAAoC,IAApC,IAA4CG,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACC,OAAzE,KAAqF,CAA5F;AACH;;AACDJ,IAAAA,GAAG,GAAG,CAACP,mBAAmB,CAACY,GAApB,CAAwBL,GAAxB,CAAD,GAAgCR,WAAW,CAACQ,GAAD,CAA3C,GAAmDA,GAAzD;AACA,WAAOE,UAAU,CAACI,YAAX,CAAwBN,GAAxB,CAAP;AACH,GATmE;AASjEX,EAAAA,2BAA2B,EAAEA,2BAToC;AASPkB,EAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,OAA/C,EAAwDZ,KAAxD,EAA+D;AAC/HR,IAAAA,aAAa,CAACkB,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCZ,KAAK,CAACa,iBAA3C,CAAb;AACH,GAXmE;AAWjEC,EAAAA,MAAM,EAAElB;AAXyD,CAA3B,CAAT,CAApC;AAaA,SAASE,gBAAT","sourcesContent":["import { __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    }, readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    }, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps, build: function (_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n"]},"metadata":{},"sourceType":"module"}