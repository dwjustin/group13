{"ast":null,"code":"import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n  if (axis.max === axis.min) return 0;\n  return pixels / (axis.max - axis.min) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\n\n\nvar correctBorderRadius = {\n  correct: function (latest, node) {\n    if (!node.target) return latest;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n\n    if (typeof latest === \"string\") {\n      if (px.test(latest)) {\n        latest = parseFloat(latest);\n      } else {\n        return latest;\n      }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n\n\n    var x = pixelsToPercent(latest, node.target.x);\n    var y = pixelsToPercent(latest, node.target.y);\n    return \"\".concat(x, \"% \").concat(y, \"%\");\n  }\n};\nexport { correctBorderRadius, pixelsToPercent };","map":{"version":3,"sources":["/Users/aditummala/Desktop/group13-1/frontend/frontend/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"],"names":["px","pixelsToPercent","pixels","axis","max","min","correctBorderRadius","correct","latest","node","target","test","parseFloat","x","y","concat"],"mappings":"AAAA,SAASA,EAAT,QAAmB,mBAAnB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,IAAjC,EAAuC;AACnC,MAAIA,IAAI,CAACC,GAAL,KAAaD,IAAI,CAACE,GAAtB,EACI,OAAO,CAAP;AACJ,SAAQH,MAAM,IAAIC,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,GAApB,CAAP,GAAmC,GAA1C;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,mBAAmB,GAAG;AACtBC,EAAAA,OAAO,EAAE,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,QAAI,CAACA,IAAI,CAACC,MAAV,EACI,OAAOF,MAAP;AACJ;AACR;AACA;AACA;;AACQ,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,UAAIR,EAAE,CAACW,IAAH,CAAQH,MAAR,CAAJ,EAAqB;AACjBA,QAAAA,MAAM,GAAGI,UAAU,CAACJ,MAAD,CAAnB;AACH,OAFD,MAGK;AACD,eAAOA,MAAP;AACH;AACJ;AACD;AACR;AACA;AACA;;;AACQ,QAAIK,CAAC,GAAGZ,eAAe,CAACO,MAAD,EAASC,IAAI,CAACC,MAAL,CAAYG,CAArB,CAAvB;AACA,QAAIC,CAAC,GAAGb,eAAe,CAACO,MAAD,EAASC,IAAI,CAACC,MAAL,CAAYI,CAArB,CAAvB;AACA,WAAO,GAAGC,MAAH,CAAUF,CAAV,EAAa,IAAb,EAAmBE,MAAnB,CAA0BD,CAA1B,EAA6B,GAA7B,CAAP;AACH;AAvBqB,CAA1B;AA0BA,SAASR,mBAAT,EAA8BL,eAA9B","sourcesContent":["import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nvar correctBorderRadius = {\n    correct: function (latest, node) {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        var x = pixelsToPercent(latest, node.target.x);\n        var y = pixelsToPercent(latest, node.target.y);\n        return \"\".concat(x, \"% \").concat(y, \"%\");\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n"]},"metadata":{},"sourceType":"module"}