{"ast":null,"code":"import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  var resolved = resolveVariant(visualElement, definition);\n\n  var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {},\n      _b = _a.transitionEnd,\n      transitionEnd = _b === void 0 ? {} : _b;\n\n  _a.transition;\n\n  var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n\n  target = __assign(__assign({}, target), transitionEnd);\n\n  for (var key in target) {\n    var value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nfunction setVariants(visualElement, variantLabels) {\n  var reversedLabels = __spreadArray([], __read(variantLabels), false).reverse();\n\n  reversedLabels.forEach(function (key) {\n    var _a;\n\n    var variant = visualElement.getVariant(key);\n    variant && setTarget(visualElement, variant);\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      setVariants(child, variantLabels);\n    });\n  });\n}\n\nfunction setValues(visualElement, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement, [definition]);\n  } else {\n    setTarget(visualElement, definition);\n  }\n}\n\nfunction checkTargetForNewValues(visualElement, target, origin) {\n  var _a, _b, _c;\n\n  var _d;\n\n  var newValueKeys = Object.keys(target).filter(function (key) {\n    return !visualElement.hasValue(key);\n  });\n  var numNewValues = newValueKeys.length;\n  if (!numNewValues) return;\n\n  for (var i = 0; i < numNewValues; i++) {\n    var key = newValueKeys[i];\n    var targetValue = target[key];\n    var value = null;\n    /**\n     * If the target is a series of keyframes, we can use the first value\n     * in the array. If this first value is null, we'll still need to read from the DOM.\n     */\n\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    /**\n     * If the target isn't keyframes, or the first keyframe was null, we need to\n     * first check if an origin value was explicitly defined in the transition as \"from\",\n     * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n     */\n\n\n    if (value === null) {\n      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n    }\n    /**\n     * If value is still undefined or null, ignore it. Preferably this would throw,\n     * but this was causing issues in Framer.\n     */\n\n\n    if (value === undefined || value === null) continue;\n\n    if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n      // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n      value = parseFloat(value);\n    } else if (!findValueType(value) && complex.test(targetValue)) {\n      value = getAnimatableNone(key, targetValue);\n    }\n\n    visualElement.addValue(key, motionValue(value));\n    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;\n    visualElement.setBaseTarget(key, value);\n  }\n}\n\nfunction getOriginFromTransition(key, transition) {\n  if (!transition) return;\n  var valueTransition = transition[key] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\n\nfunction getOrigin(target, transition, visualElement) {\n  var _a, _b;\n\n  var origin = {};\n\n  for (var key in target) {\n    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n\n  return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/framer-motion/dist/es/render/utils/setters.mjs"],"names":["__rest","__assign","__spreadArray","__read","complex","isNumericalString","isZeroValueString","resolveFinalValueInKeyframes","motionValue","getAnimatableNone","findValueType","resolveVariant","setMotionValue","visualElement","key","value","hasValue","getValue","set","addValue","setTarget","definition","resolved","_a","makeTargetAnimatable","_b","transitionEnd","transition","target","setVariants","variantLabels","reversedLabels","reverse","forEach","variant","getVariant","variantChildren","child","setValues","Array","isArray","checkTargetForNewValues","origin","_c","_d","newValueKeys","Object","keys","filter","numNewValues","length","i","targetValue","readValue","undefined","parseFloat","test","setBaseTarget","getOriginFromTransition","valueTransition","from","getOrigin","get"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,aAA3B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,aAAxB,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmD;AAC/C,MAAIF,aAAa,CAACG,QAAd,CAAuBF,GAAvB,CAAJ,EAAiC;AAC7BD,IAAAA,aAAa,CAACI,QAAd,CAAuBH,GAAvB,EAA4BI,GAA5B,CAAgCH,KAAhC;AACH,GAFD,MAGK;AACDF,IAAAA,aAAa,CAACM,QAAd,CAAuBL,GAAvB,EAA4BN,WAAW,CAACO,KAAD,CAAvC;AACH;AACJ;;AACD,SAASK,SAAT,CAAmBP,aAAnB,EAAkCQ,UAAlC,EAA8C;AAC1C,MAAIC,QAAQ,GAAGX,cAAc,CAACE,aAAD,EAAgBQ,UAAhB,CAA7B;;AACA,MAAIE,EAAE,GAAGD,QAAQ,GAAGT,aAAa,CAACW,oBAAd,CAAmCF,QAAnC,EAA6C,KAA7C,CAAH,GAAyD,EAA1E;AAAA,MAA8EG,EAAE,GAAGF,EAAE,CAACG,aAAtF;AAAA,MAAqGA,aAAa,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA1I;;AAA8IF,EAAAA,EAAE,CAACI,UAAH;;AAAe,MAAIC,MAAM,GAAG5B,MAAM,CAACuB,EAAD,EAAK,CAAC,eAAD,EAAkB,YAAlB,CAAL,CAAnB;;AAC7JK,EAAAA,MAAM,GAAG3B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK2B,MAAL,CAAT,EAAuBF,aAAvB,CAAjB;;AACA,OAAK,IAAIZ,GAAT,IAAgBc,MAAhB,EAAwB;AACpB,QAAIb,KAAK,GAAGR,4BAA4B,CAACqB,MAAM,CAACd,GAAD,CAAP,CAAxC;AACAF,IAAAA,cAAc,CAACC,aAAD,EAAgBC,GAAhB,EAAqBC,KAArB,CAAd;AACH;AACJ;;AACD,SAASc,WAAT,CAAqBhB,aAArB,EAAoCiB,aAApC,EAAmD;AAC/C,MAAIC,cAAc,GAAG7B,aAAa,CAAC,EAAD,EAAKC,MAAM,CAAC2B,aAAD,CAAX,EAA4B,KAA5B,CAAb,CAAgDE,OAAhD,EAArB;;AACAD,EAAAA,cAAc,CAACE,OAAf,CAAuB,UAAUnB,GAAV,EAAe;AAClC,QAAIS,EAAJ;;AACA,QAAIW,OAAO,GAAGrB,aAAa,CAACsB,UAAd,CAAyBrB,GAAzB,CAAd;AACAoB,IAAAA,OAAO,IAAId,SAAS,CAACP,aAAD,EAAgBqB,OAAhB,CAApB;AACA,KAACX,EAAE,GAAGV,aAAa,CAACuB,eAApB,MAAyC,IAAzC,IAAiDb,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAACU,OAAH,CAAW,UAAUI,KAAV,EAAiB;AAClGR,MAAAA,WAAW,CAACQ,KAAD,EAAQP,aAAR,CAAX;AACH,KAFyE,CAA1E;AAGH,GAPD;AAQH;;AACD,SAASQ,SAAT,CAAmBzB,aAAnB,EAAkCQ,UAAlC,EAA8C;AAC1C,MAAIkB,KAAK,CAACC,OAAN,CAAcnB,UAAd,CAAJ,EAA+B;AAC3B,WAAOQ,WAAW,CAAChB,aAAD,EAAgBQ,UAAhB,CAAlB;AACH,GAFD,MAGK,IAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AACrC,WAAOQ,WAAW,CAAChB,aAAD,EAAgB,CAACQ,UAAD,CAAhB,CAAlB;AACH,GAFI,MAGA;AACDD,IAAAA,SAAS,CAACP,aAAD,EAAgBQ,UAAhB,CAAT;AACH;AACJ;;AACD,SAASoB,uBAAT,CAAiC5B,aAAjC,EAAgDe,MAAhD,EAAwDc,MAAxD,EAAgE;AAC5D,MAAInB,EAAJ,EAAQE,EAAR,EAAYkB,EAAZ;;AACA,MAAIC,EAAJ;;AACA,MAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBoB,MAApB,CAA2B,UAAUlC,GAAV,EAAe;AAAE,WAAO,CAACD,aAAa,CAACG,QAAd,CAAuBF,GAAvB,CAAR;AAAsC,GAAlF,CAAnB;AACA,MAAImC,YAAY,GAAGJ,YAAY,CAACK,MAAhC;AACA,MAAI,CAACD,YAAL,EACI;;AACJ,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,QAAIrC,GAAG,GAAG+B,YAAY,CAACM,CAAD,CAAtB;AACA,QAAIC,WAAW,GAAGxB,MAAM,CAACd,GAAD,CAAxB;AACA,QAAIC,KAAK,GAAG,IAAZ;AACA;AACR;AACA;AACA;;AACQ,QAAIwB,KAAK,CAACC,OAAN,CAAcY,WAAd,CAAJ,EAAgC;AAC5BrC,MAAAA,KAAK,GAAGqC,WAAW,CAAC,CAAD,CAAnB;AACH;AACD;AACR;AACA;AACA;AACA;;;AACQ,QAAIrC,KAAK,KAAK,IAAd,EAAoB;AAChBA,MAAAA,KAAK,GAAG,CAACU,EAAE,GAAG,CAACF,EAAE,GAAGmB,MAAM,CAAC5B,GAAD,CAAZ,MAAuB,IAAvB,IAA+BS,EAAE,KAAK,KAAK,CAA3C,GAA+CA,EAA/C,GAAoDV,aAAa,CAACwC,SAAd,CAAwBvC,GAAxB,CAA1D,MAA4F,IAA5F,IAAoGW,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyHG,MAAM,CAACd,GAAD,CAAvI;AACH;AACD;AACR;AACA;AACA;;;AACQ,QAAIC,KAAK,KAAKuC,SAAV,IAAuBvC,KAAK,KAAK,IAArC,EACI;;AACJ,QAAI,OAAOA,KAAP,KAAiB,QAAjB,KACCV,iBAAiB,CAACU,KAAD,CAAjB,IAA4BT,iBAAiB,CAACS,KAAD,CAD9C,CAAJ,EAC4D;AACxD;AACAA,MAAAA,KAAK,GAAGwC,UAAU,CAACxC,KAAD,CAAlB;AACH,KAJD,MAKK,IAAI,CAACL,aAAa,CAACK,KAAD,CAAd,IAAyBX,OAAO,CAACoD,IAAR,CAAaJ,WAAb,CAA7B,EAAwD;AACzDrC,MAAAA,KAAK,GAAGN,iBAAiB,CAACK,GAAD,EAAMsC,WAAN,CAAzB;AACH;;AACDvC,IAAAA,aAAa,CAACM,QAAd,CAAuBL,GAAvB,EAA4BN,WAAW,CAACO,KAAD,CAAvC;AACA,KAAC4B,EAAE,GAAG,CAACC,EAAE,GAAGF,MAAN,EAAc5B,GAAd,CAAN,MAA8B,IAA9B,IAAsC6B,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA4DC,EAAE,CAAC9B,GAAD,CAAF,GAAUC,KAAtE;AACAF,IAAAA,aAAa,CAAC4C,aAAd,CAA4B3C,GAA5B,EAAiCC,KAAjC;AACH;AACJ;;AACD,SAAS2C,uBAAT,CAAiC5C,GAAjC,EAAsCa,UAAtC,EAAkD;AAC9C,MAAI,CAACA,UAAL,EACI;AACJ,MAAIgC,eAAe,GAAGhC,UAAU,CAACb,GAAD,CAAV,IAAmBa,UAAU,CAAC,SAAD,CAA7B,IAA4CA,UAAlE;AACA,SAAOgC,eAAe,CAACC,IAAvB;AACH;;AACD,SAASC,SAAT,CAAmBjC,MAAnB,EAA2BD,UAA3B,EAAuCd,aAAvC,EAAsD;AAClD,MAAIU,EAAJ,EAAQE,EAAR;;AACA,MAAIiB,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI5B,GAAT,IAAgBc,MAAhB,EAAwB;AACpBc,IAAAA,MAAM,CAAC5B,GAAD,CAAN,GACI,CAACS,EAAE,GAAGmC,uBAAuB,CAAC5C,GAAD,EAAMa,UAAN,CAA7B,MAAoD,IAApD,IAA4DJ,EAAE,KAAK,KAAK,CAAxE,GAA4EA,EAA5E,GAAiF,CAACE,EAAE,GAAGZ,aAAa,CAACI,QAAd,CAAuBH,GAAvB,CAAN,MAAuC,IAAvC,IAA+CW,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACqC,GAAH,EAD7J;AAEH;;AACD,SAAOpB,MAAP;AACH;;AAED,SAASD,uBAAT,EAAkCoB,SAAlC,EAA6CH,uBAA7C,EAAsEtC,SAAtE,EAAiFkB,SAAjF","sourcesContent":["import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = __assign(__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = __spreadArray([], __read(variantLabels), false).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n"]},"metadata":{},"sourceType":"module"}