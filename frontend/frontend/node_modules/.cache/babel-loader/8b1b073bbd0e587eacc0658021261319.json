{"ast":null,"code":"import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => v => {\n  return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n};\n\nconst splitColor = (aName, bName, cName) => v => {\n  if (!isString(v)) return v;\n  const [a, b, c, alpha] = v.match(floatRegex);\n  return {\n    [aName]: parseFloat(a),\n    [bName]: parseFloat(b),\n    [cName]: parseFloat(c),\n    alpha: alpha !== undefined ? parseFloat(alpha) : 1\n  };\n};\n\nexport { isColorString, splitColor };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/style-value-types/dist/es/color/utils.mjs"],"names":["isString","singleColorRegex","floatRegex","isColorString","type","testProp","v","Boolean","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","alpha","match","parseFloat","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,gBAAnB,EAAqCC,UAArC,QAAuD,cAAvD;;AAEA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAqBC,CAAD,IAAO;AAC7C,SAAOC,OAAO,CAAEP,QAAQ,CAACM,CAAD,CAAR,IAAeL,gBAAgB,CAACO,IAAjB,CAAsBF,CAAtB,CAAf,IAA2CA,CAAC,CAACG,UAAF,CAAaL,IAAb,CAA5C,IACVC,QAAQ,IAAIK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCD,QAAxC,CADH,CAAd;AAEH,CAHD;;AAIA,MAAMS,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAA0BX,CAAD,IAAO;AAC/C,MAAI,CAACN,QAAQ,CAACM,CAAD,CAAb,EACI,OAAOA,CAAP;AACJ,QAAM,CAACY,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,KAAV,IAAmBf,CAAC,CAACgB,KAAF,CAAQpB,UAAR,CAAzB;AACA,SAAO;AACH,KAACa,KAAD,GAASQ,UAAU,CAACL,CAAD,CADhB;AAEH,KAACF,KAAD,GAASO,UAAU,CAACJ,CAAD,CAFhB;AAGH,KAACF,KAAD,GAASM,UAAU,CAACH,CAAD,CAHhB;AAIHC,IAAAA,KAAK,EAAEA,KAAK,KAAKG,SAAV,GAAsBD,UAAU,CAACF,KAAD,CAAhC,GAA0C;AAJ9C,GAAP;AAMH,CAVD;;AAYA,SAASlB,aAAT,EAAwBW,UAAxB","sourcesContent":["import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n"]},"metadata":{},"sourceType":"module"}