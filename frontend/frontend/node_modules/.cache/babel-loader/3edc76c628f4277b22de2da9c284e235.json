{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup(_a, externalRef) {\n  var children = _a.children,\n      _b = _a.as,\n      as = _b === void 0 ? \"ul\" : _b,\n      _c = _a.axis,\n      axis = _c === void 0 ? \"y\" : _c,\n      onReorder = _a.onReorder,\n      values = _a.values,\n      props = __rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n\n  var Component = useConstant(function () {\n    return motion(as);\n  });\n  var order = [];\n  var isReordering = useRef(false);\n  invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n  var context = {\n    axis: axis,\n    registerItem: function (value, layout) {\n      /**\n       * Ensure entries can't add themselves more than once\n       */\n      if (layout && order.findIndex(function (entry) {\n        return value === entry.value;\n      }) === -1) {\n        order.push({\n          value: value,\n          layout: layout[axis]\n        });\n        order.sort(compareMin);\n      }\n    },\n    updateOrder: function (id, offset, velocity) {\n      if (isReordering.current) return;\n      var newOrder = checkReorder(order, id, offset, velocity);\n\n      if (order !== newOrder) {\n        isReordering.current = true;\n        onReorder(newOrder.map(getValue).filter(function (value) {\n          return values.indexOf(value) !== -1;\n        }));\n      }\n    }\n  };\n  useEffect(function () {\n    isReordering.current = false;\n  });\n  return React.createElement(Component, __assign({}, props, {\n    ref: externalRef\n  }), React.createElement(ReorderContext.Provider, {\n    value: context\n  }, children));\n}\n\nvar Group = forwardRef(ReorderGroup);\n\nfunction getValue(item) {\n  return item.value;\n}\n\nfunction compareMin(a, b) {\n  return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs"],"names":["__rest","__assign","invariant","React","forwardRef","useRef","useEffect","ReorderContext","motion","useConstant","checkReorder","ReorderGroup","_a","externalRef","children","_b","as","_c","axis","onReorder","values","props","Component","order","isReordering","Boolean","context","registerItem","value","layout","findIndex","entry","push","sort","compareMin","updateOrder","id","offset","velocity","current","newOrder","map","getValue","filter","indexOf","createElement","ref","Provider","Group","item","a","b","min"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,WAA1B,EAAuC;AACnC,MAAIC,QAAQ,GAAGF,EAAE,CAACE,QAAlB;AAAA,MAA4BC,EAAE,GAAGH,EAAE,CAACI,EAApC;AAAA,MAAwCA,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAApE;AAAA,MAAwEE,EAAE,GAAGL,EAAE,CAACM,IAAhF;AAAA,MAAsFA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,GAAhB,GAAsBA,EAAnH;AAAA,MAAuHE,SAAS,GAAGP,EAAE,CAACO,SAAtI;AAAA,MAAiJC,MAAM,GAAGR,EAAE,CAACQ,MAA7J;AAAA,MAAqKC,KAAK,GAAGrB,MAAM,CAACY,EAAD,EAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,MAAnB,EAA2B,WAA3B,EAAwC,QAAxC,CAAL,CAAnL;;AACA,MAAIU,SAAS,GAAGb,WAAW,CAAC,YAAY;AAAE,WAAOD,MAAM,CAACQ,EAAD,CAAb;AAAoB,GAAnC,CAA3B;AACA,MAAIO,KAAK,GAAG,EAAZ;AACA,MAAIC,YAAY,GAAGnB,MAAM,CAAC,KAAD,CAAzB;AACAH,EAAAA,SAAS,CAACuB,OAAO,CAACL,MAAD,CAAR,EAAkB,8CAAlB,CAAT;AACA,MAAIM,OAAO,GAAG;AACVR,IAAAA,IAAI,EAAEA,IADI;AAEVS,IAAAA,YAAY,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACnC;AACZ;AACA;AACY,UAAIA,MAAM,IACNN,KAAK,CAACO,SAAN,CAAgB,UAAUC,KAAV,EAAiB;AAAE,eAAOH,KAAK,KAAKG,KAAK,CAACH,KAAvB;AAA+B,OAAlE,MAAwE,CAAC,CAD7E,EACgF;AAC5EL,QAAAA,KAAK,CAACS,IAAN,CAAW;AAAEJ,UAAAA,KAAK,EAAEA,KAAT;AAAgBC,UAAAA,MAAM,EAAEA,MAAM,CAACX,IAAD;AAA9B,SAAX;AACAK,QAAAA,KAAK,CAACU,IAAN,CAAWC,UAAX;AACH;AACJ,KAXS;AAYVC,IAAAA,WAAW,EAAE,UAAUC,EAAV,EAAcC,MAAd,EAAsBC,QAAtB,EAAgC;AACzC,UAAId,YAAY,CAACe,OAAjB,EACI;AACJ,UAAIC,QAAQ,GAAG9B,YAAY,CAACa,KAAD,EAAQa,EAAR,EAAYC,MAAZ,EAAoBC,QAApB,CAA3B;;AACA,UAAIf,KAAK,KAAKiB,QAAd,EAAwB;AACpBhB,QAAAA,YAAY,CAACe,OAAb,GAAuB,IAAvB;AACApB,QAAAA,SAAS,CAACqB,QAAQ,CACbC,GADK,CACDC,QADC,EAELC,MAFK,CAEE,UAAUf,KAAV,EAAiB;AAAE,iBAAOR,MAAM,CAACwB,OAAP,CAAehB,KAAf,MAA0B,CAAC,CAAlC;AAAsC,SAF3D,CAAD,CAAT;AAGH;AACJ;AAtBS,GAAd;AAwBAtB,EAAAA,SAAS,CAAC,YAAY;AAClBkB,IAAAA,YAAY,CAACe,OAAb,GAAuB,KAAvB;AACH,GAFQ,CAAT;AAGA,SAAQpC,KAAK,CAAC0C,aAAN,CAAoBvB,SAApB,EAA+BrB,QAAQ,CAAC,EAAD,EAAKoB,KAAL,EAAY;AAAEyB,IAAAA,GAAG,EAAEjC;AAAP,GAAZ,CAAvC,EACJV,KAAK,CAAC0C,aAAN,CAAoBtC,cAAc,CAACwC,QAAnC,EAA6C;AAAEnB,IAAAA,KAAK,EAAEF;AAAT,GAA7C,EAAiEZ,QAAjE,CADI,CAAR;AAEH;;AACD,IAAIkC,KAAK,GAAG5C,UAAU,CAACO,YAAD,CAAtB;;AACA,SAAS+B,QAAT,CAAkBO,IAAlB,EAAwB;AACpB,SAAOA,IAAI,CAACrB,KAAZ;AACH;;AACD,SAASM,UAAT,CAAoBgB,CAApB,EAAuBC,CAAvB,EAA0B;AACtB,SAAOD,CAAC,CAACrB,MAAF,CAASuB,GAAT,GAAeD,CAAC,CAACtB,MAAF,CAASuB,GAA/B;AACH;;AAED,SAASJ,KAAT,EAAgBrC,YAAhB","sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup(_a, externalRef) {\n    var children = _a.children, _b = _a.as, as = _b === void 0 ? \"ul\" : _b, _c = _a.axis, axis = _c === void 0 ? \"y\" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n    var Component = useConstant(function () { return motion(as); });\n    var order = [];\n    var isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    var context = {\n        axis: axis,\n        registerItem: function (value, layout) {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex(function (entry) { return value === entry.value; }) === -1) {\n                order.push({ value: value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: function (id, offset, velocity) {\n            if (isReordering.current)\n                return;\n            var newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter(function (value) { return values.indexOf(value) !== -1; }));\n            }\n        },\n    };\n    useEffect(function () {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, __assign({}, props, { ref: externalRef }),\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nvar Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n"]},"metadata":{},"sourceType":"module"}