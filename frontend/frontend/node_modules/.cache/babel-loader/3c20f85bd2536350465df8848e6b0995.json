{"ast":null,"code":"import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n  return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  const numValues = values.length;\n  return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(o => o * duration);\n}\n\nfunction keyframes(_ref) {\n  let {\n    from = 0,\n    to = 1,\n    ease,\n    offset,\n    duration = 300\n  } = _ref;\n  const state = {\n    done: false,\n    value: from\n  };\n  const values = Array.isArray(to) ? to : [from, to];\n  const times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  let interpolator = createInterpolator();\n  return {\n    next: t => {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: () => {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };","map":{"version":3,"sources":["/Users/aditummala/Desktop/group13-1/frontend/frontend/node_modules/popmotion/dist/es/animations/generators/keyframes.mjs"],"names":["interpolate","easeInOut","defaultEasing","values","easing","map","splice","length","defaultOffset","numValues","_value","i","convertOffsetToTimes","offset","duration","o","keyframes","from","to","ease","state","done","value","Array","isArray","times","createInterpolator","interpolator","next","t","flipTarget","reverse"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACnC,SAAOD,MAAM,CAACE,GAAP,CAAW,MAAMD,MAAM,IAAIH,SAA3B,EAAsCK,MAAtC,CAA6C,CAA7C,EAAgDH,MAAM,CAACI,MAAP,GAAgB,CAAhE,CAAP;AACH;;AACD,SAASC,aAAT,CAAuBL,MAAvB,EAA+B;AAC3B,QAAMM,SAAS,GAAGN,MAAM,CAACI,MAAzB;AACA,SAAOJ,MAAM,CAACE,GAAP,CAAW,CAACK,MAAD,EAASC,CAAT,KAAeA,CAAC,KAAK,CAAN,GAAUA,CAAC,IAAIF,SAAS,GAAG,CAAhB,CAAX,GAAgC,CAA1D,CAAP;AACH;;AACD,SAASG,oBAAT,CAA8BC,MAA9B,EAAsCC,QAAtC,EAAgD;AAC5C,SAAOD,MAAM,CAACR,GAAP,CAAYU,CAAD,IAAOA,CAAC,GAAGD,QAAtB,CAAP;AACH;;AACD,SAASE,SAAT,OAAwE;AAAA,MAArD;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAYC,IAAAA,EAAE,GAAG,CAAjB;AAAoBC,IAAAA,IAApB;AAA0BN,IAAAA,MAA1B;AAAkCC,IAAAA,QAAQ,GAAG;AAA7C,GAAqD;AACpE,QAAMM,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEL;AAAtB,GAAd;AACA,QAAMd,MAAM,GAAGoB,KAAK,CAACC,OAAN,CAAcN,EAAd,IAAoBA,EAApB,GAAyB,CAACD,IAAD,EAAOC,EAAP,CAAxC;AACA,QAAMO,KAAK,GAAGb,oBAAoB,CAACC,MAAM,IAAIA,MAAM,CAACN,MAAP,KAAkBJ,MAAM,CAACI,MAAnC,GAC7BM,MAD6B,GAE7BL,aAAa,CAACL,MAAD,CAFe,EAELW,QAFK,CAAlC;;AAGA,WAASY,kBAAT,GAA8B;AAC1B,WAAO1B,WAAW,CAACyB,KAAD,EAAQtB,MAAR,EAAgB;AAC9BgB,MAAAA,IAAI,EAAEI,KAAK,CAACC,OAAN,CAAcL,IAAd,IAAsBA,IAAtB,GAA6BjB,aAAa,CAACC,MAAD,EAASgB,IAAT;AADlB,KAAhB,CAAlB;AAGH;;AACD,MAAIQ,YAAY,GAAGD,kBAAkB,EAArC;AACA,SAAO;AACHE,IAAAA,IAAI,EAAGC,CAAD,IAAO;AACTT,MAAAA,KAAK,CAACE,KAAN,GAAcK,YAAY,CAACE,CAAD,CAA1B;AACAT,MAAAA,KAAK,CAACC,IAAN,GAAaQ,CAAC,IAAIf,QAAlB;AACA,aAAOM,KAAP;AACH,KALE;AAMHU,IAAAA,UAAU,EAAE,MAAM;AACd3B,MAAAA,MAAM,CAAC4B,OAAP;AACAJ,MAAAA,YAAY,GAAGD,kBAAkB,EAAjC;AACH;AATE,GAAP;AAWH;;AAED,SAASd,oBAAT,EAA+BV,aAA/B,EAA8CM,aAA9C,EAA6DQ,SAA7D","sourcesContent":["import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    const state = { done: false, value: from };\n    const values = Array.isArray(to) ? to : [from, to];\n    const times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n"]},"metadata":{},"sourceType":"module"}