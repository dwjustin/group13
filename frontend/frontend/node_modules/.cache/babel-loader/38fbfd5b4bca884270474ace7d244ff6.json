{"ast":null,"code":"function hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslaToRgba(_ref) {\n  let {\n    hue,\n    saturation,\n    lightness,\n    alpha\n  } = _ref;\n  hue /= 360;\n  saturation /= 100;\n  lightness /= 100;\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n\n  if (!saturation) {\n    red = green = blue = lightness;\n  } else {\n    const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;\n    const p = 2 * lightness - q;\n    red = hueToRgb(p, q, hue + 1 / 3);\n    green = hueToRgb(p, q, hue);\n    blue = hueToRgb(p, q, hue - 1 / 3);\n  }\n\n  return {\n    red: Math.round(red * 255),\n    green: Math.round(green * 255),\n    blue: Math.round(blue * 255),\n    alpha\n  };\n}\n\nexport { hslaToRgba };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs"],"names":["hueToRgb","p","q","t","hslaToRgba","hue","saturation","lightness","alpha","red","green","blue","Math","round"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvB,MAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;AACJ,MAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;AACJ,MAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAU,CAAV,GAAcE,CAAzB;AACJ,MAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOD,CAAP;AACJ,MAAIC,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,KAAW,IAAI,CAAJ,GAAQE,CAAnB,IAAwB,CAAnC;AACJ,SAAOF,CAAP;AACH;;AACD,SAASG,UAAT,OAA2D;AAAA,MAAvC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,UAAP;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,GAAuC;AACvDH,EAAAA,GAAG,IAAI,GAAP;AACAC,EAAAA,UAAU,IAAI,GAAd;AACAC,EAAAA,SAAS,IAAI,GAAb;AACA,MAAIE,GAAG,GAAG,CAAV;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,IAAI,GAAG,CAAX;;AACA,MAAI,CAACL,UAAL,EAAiB;AACbG,IAAAA,GAAG,GAAGC,KAAK,GAAGC,IAAI,GAAGJ,SAArB;AACH,GAFD,MAGK;AACD,UAAML,CAAC,GAAGK,SAAS,GAAG,GAAZ,GACJA,SAAS,IAAI,IAAID,UAAR,CADL,GAEJC,SAAS,GAAGD,UAAZ,GAAyBC,SAAS,GAAGD,UAF3C;AAGA,UAAML,CAAC,GAAG,IAAIM,SAAJ,GAAgBL,CAA1B;AACAO,IAAAA,GAAG,GAAGT,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAd;AACAK,IAAAA,KAAK,GAAGV,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAP,CAAhB;AACAM,IAAAA,IAAI,GAAGX,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAf;AACH;;AACD,SAAO;AACHI,IAAAA,GAAG,EAAEG,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,GAAjB,CADF;AAEHC,IAAAA,KAAK,EAAEE,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,GAAnB,CAFJ;AAGHC,IAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,GAAlB,CAHH;AAIHH,IAAAA;AAJG,GAAP;AAMH;;AAED,SAASJ,UAAT","sourcesContent":["function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n"]},"metadata":{},"sourceType":"module"}