{"ast":null,"code":"import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\nconst color = {\n  test: v => rgba.test(v) || hex.test(v) || hsla.test(v),\n  parse: v => {\n    if (rgba.test(v)) {\n      return rgba.parse(v);\n    } else if (hsla.test(v)) {\n      return hsla.parse(v);\n    } else {\n      return hex.parse(v);\n    }\n  },\n  transform: v => {\n    return isString(v) ? v : v.hasOwnProperty('red') ? rgba.transform(v) : hsla.transform(v);\n  }\n};\nexport { color };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/style-value-types/dist/es/color/index.mjs"],"names":["isString","hex","hsla","rgba","color","test","v","parse","transform","hasOwnProperty"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,YAArB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAGC,CAAD,IAAOH,IAAI,CAACE,IAAL,CAAUC,CAAV,KAAgBL,GAAG,CAACI,IAAJ,CAASC,CAAT,CAAhB,IAA+BJ,IAAI,CAACG,IAAL,CAAUC,CAAV,CADlC;AAEVC,EAAAA,KAAK,EAAGD,CAAD,IAAO;AACV,QAAIH,IAAI,CAACE,IAAL,CAAUC,CAAV,CAAJ,EAAkB;AACd,aAAOH,IAAI,CAACI,KAAL,CAAWD,CAAX,CAAP;AACH,KAFD,MAGK,IAAIJ,IAAI,CAACG,IAAL,CAAUC,CAAV,CAAJ,EAAkB;AACnB,aAAOJ,IAAI,CAACK,KAAL,CAAWD,CAAX,CAAP;AACH,KAFI,MAGA;AACD,aAAOL,GAAG,CAACM,KAAJ,CAAUD,CAAV,CAAP;AACH;AACJ,GAZS;AAaVE,EAAAA,SAAS,EAAGF,CAAD,IAAO;AACd,WAAON,QAAQ,CAACM,CAAD,CAAR,GACDA,CADC,GAEDA,CAAC,CAACG,cAAF,CAAiB,KAAjB,IACIN,IAAI,CAACK,SAAL,CAAeF,CAAf,CADJ,GAEIJ,IAAI,CAACM,SAAL,CAAeF,CAAf,CAJV;AAKH;AAnBS,CAAd;AAsBA,SAASF,KAAT","sourcesContent":["import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n"]},"metadata":{},"sourceType":"module"}