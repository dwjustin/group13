{"ast":null,"code":"/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox(_a) {\n  var top = _a.top,\n      left = _a.left,\n      right = _a.right,\n      bottom = _a.bottom;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\n\nfunction convertBoxToBoundingBox(_a) {\n  var x = _a.x,\n      y = _a.y;\n  return {\n    top: y.min,\n    right: x.max,\n    bottom: y.max,\n    left: x.min\n  };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\n\n\nfunction transformBoxPoints(point, transformPoint) {\n  if (!transformPoint) return point;\n  var topLeft = transformPoint({\n    x: point.left,\n    y: point.top\n  });\n  var bottomRight = transformPoint({\n    x: point.right,\n    y: point.bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };","map":{"version":3,"sources":["/Users/aditummala/Desktop/group13-1/frontend/frontend/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs"],"names":["convertBoundingBoxToBox","_a","top","left","right","bottom","x","min","max","y","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,uBAAT,CAAiCC,EAAjC,EAAqC;AACjC,MAAIC,GAAG,GAAGD,EAAE,CAACC,GAAb;AAAA,MAAkBC,IAAI,GAAGF,EAAE,CAACE,IAA5B;AAAA,MAAkCC,KAAK,GAAGH,EAAE,CAACG,KAA7C;AAAA,MAAoDC,MAAM,GAAGJ,EAAE,CAACI,MAAhE;AACA,SAAO;AACHC,IAAAA,CAAC,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,IAAP;AAAaK,MAAAA,GAAG,EAAEJ;AAAlB,KADA;AAEHK,IAAAA,CAAC,EAAE;AAAEF,MAAAA,GAAG,EAAEL,GAAP;AAAYM,MAAAA,GAAG,EAAEH;AAAjB;AAFA,GAAP;AAIH;;AACD,SAASK,uBAAT,CAAiCT,EAAjC,EAAqC;AACjC,MAAIK,CAAC,GAAGL,EAAE,CAACK,CAAX;AAAA,MAAcG,CAAC,GAAGR,EAAE,CAACQ,CAArB;AACA,SAAO;AAAEP,IAAAA,GAAG,EAAEO,CAAC,CAACF,GAAT;AAAcH,IAAAA,KAAK,EAAEE,CAAC,CAACE,GAAvB;AAA4BH,IAAAA,MAAM,EAAEI,CAAC,CAACD,GAAtC;AAA2CL,IAAAA,IAAI,EAAEG,CAAC,CAACC;AAAnD,GAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASI,kBAAT,CAA4BC,KAA5B,EAAmCC,cAAnC,EAAmD;AAC/C,MAAI,CAACA,cAAL,EACI,OAAOD,KAAP;AACJ,MAAIE,OAAO,GAAGD,cAAc,CAAC;AAAEP,IAAAA,CAAC,EAAEM,KAAK,CAACT,IAAX;AAAiBM,IAAAA,CAAC,EAAEG,KAAK,CAACV;AAA1B,GAAD,CAA5B;AACA,MAAIa,WAAW,GAAGF,cAAc,CAAC;AAAEP,IAAAA,CAAC,EAAEM,KAAK,CAACR,KAAX;AAAkBK,IAAAA,CAAC,EAAEG,KAAK,CAACP;AAA3B,GAAD,CAAhC;AACA,SAAO;AACHH,IAAAA,GAAG,EAAEY,OAAO,CAACL,CADV;AAEHN,IAAAA,IAAI,EAAEW,OAAO,CAACR,CAFX;AAGHD,IAAAA,MAAM,EAAEU,WAAW,CAACN,CAHjB;AAIHL,IAAAA,KAAK,EAAEW,WAAW,CAACT;AAJhB,GAAP;AAMH;;AAED,SAASN,uBAAT,EAAkCU,uBAAlC,EAA2DC,kBAA3D","sourcesContent":["/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    var topLeft = transformPoint({ x: point.left, y: point.top });\n    var bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n"]},"metadata":{},"sourceType":"module"}