{"ast":null,"code":"import { __assign } from 'tslib';\nimport { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps) {\n  if (forwardMotionProps === void 0) {\n    forwardMotionProps = false;\n  }\n\n  var useRender = function (Component, props, projectionId, ref, _a, isStatic) {\n    var latestValues = _a.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n\n    var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), {\n      ref: ref\n    });\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nexport { createUseRender };","map":{"version":3,"sources":["C:/kai/Cal/Fullstack/group13/frontend/frontend/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"names":["__assign","createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","_a","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,SAASC,eAAT,CAAyBC,kBAAzB,EAA6C;AACzC,MAAIA,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;AAAEA,IAAAA,kBAAkB,GAAG,KAArB;AAA6B;;AAClE,MAAIC,SAAS,GAAG,UAAUC,SAAV,EAAqBC,KAArB,EAA4BC,YAA5B,EAA0CC,GAA1C,EAA+CC,EAA/C,EAAmDC,QAAnD,EAA6D;AACzE,QAAIC,YAAY,GAAGF,EAAE,CAACE,YAAtB;AACA,QAAIC,cAAc,GAAGZ,cAAc,CAACK,SAAD,CAAd,GACfJ,WADe,GAEfH,YAFN;AAGA,QAAIe,WAAW,GAAGD,cAAc,CAACN,KAAD,EAAQK,YAAR,EAAsBD,QAAtB,CAAhC;AACA,QAAII,aAAa,GAAGf,WAAW,CAACO,KAAD,EAAQ,OAAOD,SAAP,KAAqB,QAA7B,EAAuCF,kBAAvC,CAA/B;;AACA,QAAIY,YAAY,GAAGnB,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkB,aAAL,CAAT,EAA8BD,WAA9B,CAAT,EAAqD;AAAEL,MAAAA,GAAG,EAAEA;AAAP,KAArD,CAA3B;;AACA,QAAID,YAAJ,EAAkB;AACdQ,MAAAA,YAAY,CAAC,oBAAD,CAAZ,GAAqCR,YAArC;AACH;;AACD,WAAOV,aAAa,CAACQ,SAAD,EAAYU,YAAZ,CAApB;AACH,GAZD;;AAaA,SAAOX,SAAP;AACH;;AAED,SAASF,eAAT","sourcesContent":["import { __assign } from 'tslib';\nimport { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, projectionId, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref: ref });\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"]},"metadata":{},"sourceType":"module"}